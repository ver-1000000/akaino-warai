function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}const random=(a=100)=>Math.round(Math.random()*a),average=a=>a.reduce((c,a)=>c+a,0)/a.length,median=a=>{const b=0|a.length/2,c=a.slice().sort((c,a)=>c<a?-1:a<c?1:0);return c.length%2?c[b]:(c[b-1]+c[b])/2},now=()=>new Date().toLocaleString("ja-JP",{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"numeric"}).replace(/\D/g,""),QUERY_NAME_MAP={".body":"\u8EAB\u4F53\u2015\u2015 Body",".nose":"\u9F3B\u2015\u2015 Nose",".fang .left":"\u5DE6\u306E\u30AD\u30D0\u2015\u2015 Left Fang",".fang .right":"\u53F3\u306E\u30AD\u30D0\u2015\u2015 Right Fang",".eye .left":"\u5DE6\u76EE\u2015\u2015 Left Eye",".eye .right":"\u53F3\u76EE\u2015\u2015 Right Eye"};/**
 * DOMを扱いやすくするためのラッパー。
 */class Entity{get searchParams(){const a=new URLSearchParams;return Entity.RESTORABLE_ATTRIBUTES.map(a=>[a,this.element.style.getPropertyValue(a)]).forEach(([b,c])=>c&&a.append(`${this.uniqQuery}:${b}`,c)),a}get value(){const a=a=>(a||"").split(/[^0-9^\\.]/).filter(Boolean).map(Number),[b,c,d,e]=a(this.element.style.getPropertyValue("transform")),[f,g]=a(this.element.style.getPropertyValue("transform-origin"));return{x:b,y:c,scale:d,rotate:e,originX:f,originY:g}}constructor(a){_defineProperty(this,"uniqQuery",void 0),_defineProperty(this,"name",void 0),_defineProperty(this,"element",void 0),_defineProperty(this,"animation",!1),this.uniqQuery=a,this.name=QUERY_NAME_MAP[a]||"",this.element=document.querySelector(a)}removeClass(...a){this.element.classList.remove(a)}addClass(...a){this.element.classList.add(a)}updateStyle(a,b){this.element.style.setProperty(a,b)}/**
   * HACK: iOS Safariにて、styleの削除やリセットを行うと、スタイルが以前のママ残ってしまうので、
   * 新しく初期値を設置してリセットする
   */reset(){this.updateStyle("transform",`translate(0px, 0px) scale(1) rotate(0deg)`),this.updateStyle("transform-origin",`50px 40px`)}restore(){const a=Object.fromEntries(new URLSearchParams(location.search));Entity.RESTORABLE_ATTRIBUTES.forEach(b=>{const c=a[`${this.uniqQuery}:${b}`];c&&this.updateStyle(b,c),location.search.includes("%2C")||this.element.setAttribute(b,c)})}}/**
 * シングルトン的に利用するロジックをまとめたサービス。
 */_defineProperty(Entity,"RESTORABLE_ATTRIBUTES",["stroke","transform","transform-origin"]);class Service{get bgColor(){return`hsl(${this.hue}, 100%, 70%)`}get accentColor(){return`hsl(${(this.hue-90)%360}, 100%, 40%)`}get resultURL(){const a=new URLSearchParams;this.animEntities.forEach(b=>[...b.searchParams].forEach(([b,c])=>a.append(b,c))),a.append("hue",this.hue);const b=location.href.replace(/(?!.*\/).*/,"");return`${b}?${a}`}/** 変更に弱い設計なので注意 */get score(){const a=this.animEntities.reduce((b,{value:a})=>({x:[...b.x,a.x],y:[...b.y,a.y],scale:[...b.scale,a.scale],rotate:[...b.rotate,a.rotate],originX:[...b.originX,a.originX]}),{x:[],y:[],scale:[],rotate:[],originX:[]}),b=(a,b,c)=>{// 理想値(中央値)`ideal`までの近似度を百分率にしてスコアとする
const d=(a,b,c,d,e=!1)=>{const f=Math.abs(c-d%b*(e?2:1));return 100-100*(f/(b-a))};return average(a.map(e=>d(b,c,median(a),e)))},c=[b(a.x,-64,64),b(a.y,-64,64),b(a.scale,.5,5.5),b(a.rotate,0,180,!0),b(a.originX,45,55)];return Math.round(10*average(c))/10}constructor(){_defineProperty(this,"hue",random()),_defineProperty(this,"world",new Entity(".world")),_defineProperty(this,"topText",new Entity(".top .text")),_defineProperty(this,"buttons",new Entity(".buttons")),_defineProperty(this,"saveImageButton",new Entity(".bottom .left.button")),_defineProperty(this,"tweetButton",new Entity(".bottom .center.button")),_defineProperty(this,"resetButton",new Entity(".bottom .right.button")),_defineProperty(this,"animEntities",Object.keys(QUERY_NAME_MAP).map(a=>new Entity(a))),_defineProperty(this,"params",new URLSearchParams(location.href)),new Control(this),null!=this.params.get("hue")&&this.restore(),null!=this.params.get("download")&&this.downloadImage()}downloadImage(){this.restore(),this.buttons.addClass("hidden"),svg2png(this.world.element).then(a=>{Object.assign(document.createElement("a"),{href:a,download:`akaino-warai_${now()}.png`}).click(),close()})}openDownloadWindow(){open(this.resultURL+"&download=")}tweet(){const a=encodeURIComponent(this.resultURL),b=this.score,c=6>b?"\u30AD\u30DF\u306F\u4F1D\u8AAC\u306E\u4F4E\u7D1A\u6226\u58EB\u2026\u2026":30>b?"\u3082\u3046\u306A\u3093\u3060\u304B\u3088\u304F\u308F\u304B\u3089\u306A\u3044\uFF01":50>b?"\u3053\u3093\u306A\u6731\u732A\u306B\u306A\u3063\u3061\u3083\u3063\u305F\uFF01":70>b?"\u307E\u3042\u307E\u3042\u306E\u51FA\u6765\uFF01":90>b?"\u30A4\u30A4\u7DDA\u3044\u3063\u3066\u308B\uFF01":95>b?"\u30DF\u30E9\u30AF\u30EB\u30B7\u30E7\u30C3\u30C8\uFF01\u3042\u3068\u4E00\u6B69\uFF01":"\u3053\u3093\u306A\u5B8C\u74A7\u306A\u6731\u732A\u3063\u3066\u3042\u308B\uFF1F\uFF1F\uFF1F",d=encodeURIComponent(`${b}点！ ${c} 朱猪わらいで朱猪を完成させよう！`),e=encodeURIComponent("\u6731\u732A\u308F\u3089\u3044");open(`//twitter.com/intent/tweet?text=${d}&url=${a}&hashtags=${e}`,"_blank",`menubar=no,toolbar=no,resizable=yes,scrollbars=yes,width=710,height=400`)}reset(){this.hue=random(360),this.animEntities.forEach(a=>a.reset()),new Control(this)}restore(){this.hue=this.params.get("hue"),this.animEntities.forEach(a=>a.restore()),this.world.element.style.setProperty("background-color",this.bgColor),this.topText.updateStyle("stroke",this.accentColor),this.finish(),this.updateTopText()}finish(){this.world.element.onclick=this.world.element.onkeyup=null,this.world.addClass("loading"),setTimeout(()=>{this.buttons.removeClass("hidden"),this.updateTopText(`Score: ${this.score}`)},500)}updateTopText(a=""){this.topText.element.innerHTML=a}}/**
 * コントロールを記述するクラス。
 */class Control{constructor(a){_defineProperty(this,"currentEntity",null),_defineProperty(this,"service",void 0),this.service=a,this.start()}saveImageButtonClick(a){a.stopPropagation(),this.service.openDownloadWindow()}tweetButtonClick(a){a.stopPropagation(),this.service.tweet()}resetButtonClick(a){a.stopPropagation(),this.service.reset()}nextStep(){null==this.currentEntity?(this.service.animEntities.forEach(a=>this.animate(a)),this.currentEntity=this.service.animEntities[0]):(this.currentEntity.updateStyle("stroke",null),this.currentEntity.animation=!1,this.currentEntity=this.service.animEntities[this.service.animEntities.indexOf(this.currentEntity)+1]),this.currentEntity?(this.service.updateTopText(this.currentEntity.name),this.currentEntity.updateStyle("stroke",this.service.accentColor)):this.service.finish()}start(){this.service.world.element.focus(),this.service.world.removeClass("loading"),this.service.updateTopText("\u30AF\u30EA\u30C3\u30AF\u3059\u308B\u3068\u59CB\u307E\u308B\u3088\uFF01\u2015\u2015 Click to Start!"),this.service.world.element.style.setProperty("background-color",this.service.bgColor),this.service.topText.updateStyle("stroke",this.service.accentColor),this.service.buttons.addClass("hidden"),this.service.saveImageButton.element.onclick=a=>this.saveImageButtonClick(a),this.service.tweetButton.element.onclick=a=>this.tweetButtonClick(a),this.service.resetButton.element.onclick=a=>this.resetButtonClick(a),this.service.world.element.onclick=()=>this.nextStep(),this.service.world.element.onkeyup=()=>this.nextStep()}animate(a){var b=Math.abs;const c=({origin:d,x:e,y:f,scale:g,rotate:h})=>{const i=50+b(d-5),j=(5+b(g-50))/10,k=64-b(128-e),l=64-b(128-f);// 45 ~ 55
// -64 ~ 64
a.updateStyle("transform",`translate(${k}px, ${l}px) scale(${j}) rotate(${h}deg)`),a.updateStyle("transform-origin",`${i}px 40px`),d=(d+1)%10,e=(e+7)%256,f=(f+3)%256,g=(g+1)%100,h=(h+9)%360,a.animation&&requestAnimationFrame(()=>c({origin:d,x:e,y:f,scale:g,rotate:h}))};a.animation=!0,c({origin:random(10),x:random(256),y:random(256),scale:random(100),rotate:random(360)})}}addEventListener("load",async()=>new Service);/**
 * 渡されたSVGのcomputedStyleを計算して、Promise<DataURI>として返却する関数。
 *
 * {@link https://qiita.com/Nikkely/items/aa485ebdbec51e49ecbc}
 */const svg2png=a=>{const b=a.cloneNode(!1),c=[[a,b]];for(b.version=1.1,b.xmlns="http://www.w3.org/2000/svg";0!==c.length;){const[a,b]=c.pop(),d=window.getComputedStyle(a,""),e=a.children;for(let a of d)b.style[a]=d.getPropertyValue(a);if(0!==e.length)for(let a of e){const d=a.cloneNode(!1);b.appendChild(d),c.push([a,d])}else b.innerHTML=a.innerHTML}const d=new XMLSerializer().serializeToString(b),e={width:a.width.baseVal.value,height:a.height.baseVal.value},f=Object.assign(document.createElement("canvas"),e),g=f.getContext("2d"),h=new Image;return new Promise((a,b)=>{h.onload=()=>{g.drawImage(h,0,0),a(f.toDataURL("image/png"))},h.onerror=a=>b(a),h.src="data:image/svg+xml;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(d)))})};
